/*
 * OpenAI API
 *
 * APIs for sampling from and fine-tuning language models
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CreateAnswerResponse {
    #[serde(rename = "object", skip_serializing_if = "Option::is_none")]
    pub object: Option<String>,
    #[serde(rename = "model", skip_serializing_if = "Option::is_none")]
    pub model: Option<String>,
    #[serde(rename = "search_model", skip_serializing_if = "Option::is_none")]
    pub search_model: Option<String>,
    #[serde(rename = "completion", skip_serializing_if = "Option::is_none")]
    pub completion: Option<String>,
    #[serde(rename = "answers", skip_serializing_if = "Option::is_none")]
    pub answers: Option<Vec<String>>,
    #[serde(rename = "selected_documents", skip_serializing_if = "Option::is_none")]
    pub selected_documents: Option<Vec<crate::models::CreateAnswerResponseSelectedDocumentsInner>>,
}

impl CreateAnswerResponse {
    pub fn new() -> CreateAnswerResponse {
        CreateAnswerResponse {
            object: None,
            model: None,
            search_model: None,
            completion: None,
            answers: None,
            selected_documents: None,
        }
    }
}


